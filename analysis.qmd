---
title: "M235 Causal Inference"
subtitle: Final Project
date: today
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: true
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
engine: knitr
knitr:
  opts_chunk: 
    fig.align: 'center'
    message: FALSE
    cache: false
---

# Loading in data

```{r message = false}
library(tidyverse)
library(VIM)
library(asciiSetupReader)
library(survey)
library(pROC)
library(ResourceSelection)
library(tableone)
```


```{r}
# Loading in Data
df <- read_ascii_setup(
  "XXH2023_YRBS_Data.dat",     
  "2023XXH-SPSS.sps",         
  use_value_labels = TRUE,
  use_clean_names = TRUE,
  select_columns = NULL,
  coerce_numeric = TRUE
)
# colnames(df)
# names(df)[sapply(df, is.numeric)]
```

Response variable: `Felt_sad_or_hopeless` (almost every day for >=2 weeks in a row so that they stopped doing some usual activities, during the 12 months before the survey): 1 = Yes, 2 = No.  

```{r}
table(df$Felt_sad_or_hopeless)
```

Main treatment: `Bullied_at_school`

```{r}
table(df$Bullied_at_school)
```

Other covariates: 

```{r}
table(df$Hours_of_sleep_on_school_night)
```

1. Demographics
- Sex (`What_is_your_sex`)
- Age (`How_old_are_you`)
- Race (`What_is_your_race`)
- Sexual identity (`Sexual_identity`)

2. Family and Social Environment
- Violence in neighborhood (`Saw_physical_violence_in_neighborhood`)
- Unstable housing (`Experienced_unstable_housing`)
- Family environment (`Ever_lived_w_parent_guardian_w_substance_abuse_ACE`)
- Physical abuse (`Ever_parental_physical_abuse_ACEs`)

3. Substance use
- `Current_marijuana_use`

4. Health behaviors
- Breakfast eating (`Did_not_eat_breakfast`)
- Physical exercise (`did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days`)
- Sleep (`Hours_of_sleep_on_school_night`)

# Subsetting and Cleaning

```{r}
# list of variables to keep
kept_vars <- c(
  # Response and treatment
  "Felt_sad_or_hopeless",
  "Bullied_at_school",
  
  # Survey weights
  "Overall_Analysis_Weight",
  
  # Demographics
  "What_is_your_sex",
  "How_old_are_you",
  "What_is_your_race",
  "Sexual_identity",
  
  # Family and social environment
  "Saw_physical_violence_in_neighborhood",
  "Experienced_unstable_housing",
  "Ever_lived_w_parent_guardian_w_substance_abuse_ACE",
  "Ever_parental_physical_abuse_ACEs",
  
  # Substance use
  "Current_marijuana_use",
  
  # Health behaviors
  "Did_not_eat_breakfast",
  "did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days",
  "Hours_of_sleep_on_school_night"
)

# subset the dataset
df_sub <- df[, kept_vars]

# inspect missing values
aggr(df_sub, numbers = TRUE, sortVars = TRUE, 
     labels = names(df_sub), cex.axis = 0.7, gap = 3, 
     ylab = c("Missing data", "Pattern"))

matrixplot(df_sub)

# missing values are dropped
df_clean <- na.omit(df_sub)
# change variable type
df_clean$Felt_sad_or_hopeless <- ifelse(df_clean$Felt_sad_or_hopeless == 2, 0, 1)
df_clean$Bullied_at_school <- factor(ifelse(df_clean$Bullied_at_school=="No", 0, 1))
#df_clean$What_is_your_sex <- factor(ifelse(df_clean$What_is_your_sex=="Male", 0, 1))
df_clean$How_old_are_you <- recode(df_clean$How_old_are_you,
  "12 years old or younger" = 12,
  "13 years old" = 13,
  "14 years old" = 14,
  "15 years old" = 15,
  "16 years old" = 16,
  "17 years old" = 17,
  "18 years old or older" = 18
)
df_clean$is_white <- factor(ifelse(grepl("^E$", df_clean$What_is_your_race), 1, 0))
df_clean$is_LGBTQ <- factor(ifelse(df_clean$Sexual_identity == "Heterosexual (straight)", 0, 1))
#df_clean$Saw_physical_violence_in_neighborhood <- factor(ifelse(df_clean$Saw_physical_violence_in_neighborhood == "No", 0, 1))
#df_clean$Experienced_unstable_housing <- factor(ifelse(df_clean$Experienced_unstable_housing == 2, 0, 1))
#df_clean$Ever_lived_w_parent_guardian_w_substance_abuse_ACE <- factor(ifelse(df_clean$Ever_lived_w_parent_guardian_w_substance_abuse_ACE == "No", 0, 1))
df_clean$Ever_parental_physical_abuse_ACEs <- factor(ifelse(df_clean$Ever_parental_physical_abuse_ACEs == "Never", 0, 1))
df_clean$Current_marijuana_use <- factor(ifelse(df_clean$Current_marijuana_use == "0 times", 0, 1))
#df_clean$Did_not_eat_breakfast <- factor(df_clean$Did_not_eat_breakfast)
#df_clean$did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days <- factor(df_clean$did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days)
df_clean$Hours_of_sleep_on_school_night <- as.numeric(substring(df_clean$Hours_of_sleep_on_school_night, 1, 2))
head(df_clean)
```

# Survey-weighted unadjusted average difference

```{r}
# create a survey design object
design <- svydesign(
  ids = ~1,
  data = df_clean,
  weights = ~Overall_Analysis_Weight
)

# compute weighted means for each "treatment" group
mean_by_treatment <- svyby(
  ~Felt_sad_or_hopeless,
  ~Bullied_at_school,
  design,
  svymean,
  na.rm = TRUE
)

print(mean_by_treatment)

# calculate the weighted difference (ATE estimate)
ate_weighted_mean <- diff(mean_by_treatment$Felt_sad_or_hopeless)
cat("Estimated ATE (difference in weighted means) of bullying:", round(ate_weighted_mean, 2), "\n")
```


# Regression (Weighted)

## Fit a logistic regression model

```{r}
# logistic regression
glm_fit <- glm(
  Felt_sad_or_hopeless ~ Bullied_at_school * (What_is_your_sex + How_old_are_you + is_white + is_LGBTQ +
    Saw_physical_violence_in_neighborhood + Experienced_unstable_housing + 
    Ever_lived_w_parent_guardian_w_substance_abuse_ACE + Ever_parental_physical_abuse_ACEs + Current_marijuana_use +
    factor(Did_not_eat_breakfast) + did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days + 
    Hours_of_sleep_on_school_night),
  data = df_clean,
  family = binomial(),
  weights = Overall_Analysis_Weight
)

# reduced model with main effect only
reduced <- glm(
  Felt_sad_or_hopeless ~ Bullied_at_school + What_is_your_sex + How_old_are_you + is_white + is_LGBTQ +
    Saw_physical_violence_in_neighborhood + Experienced_unstable_housing + 
    Ever_lived_w_parent_guardian_w_substance_abuse_ACE + Ever_parental_physical_abuse_ACEs + Current_marijuana_use +
    factor(Did_not_eat_breakfast) + did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days + 
    Hours_of_sleep_on_school_night,
  data = df_clean,
  family = binomial(),
  weights = Overall_Analysis_Weight
)

# test all interaction
anova(reduced, glm_fit, test = "Chi")
```

```{r}
# test interaction terms
(drop1_results <- suppressWarnings(drop1(glm_fit, test = "Chi")))
```

```{r}
# add the significant interaction terms
glm_fit <- glm(
  Felt_sad_or_hopeless ~ Bullied_at_school + What_is_your_sex + How_old_are_you + is_white + is_LGBTQ +
    Saw_physical_violence_in_neighborhood + Experienced_unstable_housing + 
    Ever_lived_w_parent_guardian_w_substance_abuse_ACE + Ever_parental_physical_abuse_ACEs + Current_marijuana_use +
    factor(Did_not_eat_breakfast) + did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days + 
    Hours_of_sleep_on_school_night + Bullied_at_school:is_white + Bullied_at_school:Experienced_unstable_housing,
  data = df_clean,
  family = binomial(),
  weights = Overall_Analysis_Weight
)

summary(glm_fit)
```

## Diagnostics

```{r}
# ROC
prob <- predict(glm_fit, type = "response")
roc_obj <- roc(df_clean$Felt_sad_or_hopeless, prob)
plot(roc_obj)
auc(roc_obj)
```

```{r}
# Hosmer-Lemeshow
binned_df <- df_clean %>%
  mutate(
    predprob = predict(glm_fit, type = "response"),  # predicted probabilities
    linpred  = predict(glm_fit, type = "link"),      # linear predictor (logit)
    bin = cut(linpred, breaks = unique(quantile(linpred, probs = (1:100)/101, na.rm = TRUE)))
  ) %>%
  group_by(bin) %>%
  summarize(
    y = sum(Felt_sad_or_hopeless == 1, na.rm = TRUE),     # observed 1s in the bin
    avgpred = mean(predprob, na.rm = TRUE),               # average predicted prob
    count = n(),                                          # number of obs in bin
    .groups = "drop"
  ) %>%
  mutate(
    obs_prop = y / count,
    se_fit = sqrt(avgpred * (1 - avgpred) / count)        # standard error of binomial proportion
  )

# plot observed vs predicted
ggplot(binned_df, aes(x = avgpred, y = obs_prop)) +
  geom_point() +
  geom_linerange(aes(ymin = obs_prop - 2 * se_fit,
                     ymax = obs_prop + 2 * se_fit), alpha = 0.5) +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray50") +
  labs(x = "Predicted probability", y = "Observed proportion",
       title = "Calibration Plot (Observed vs Predicted)") +
  theme_minimal()
```

## Effect

```{r}
# calculates the margin effect over our data set for the bullied at school coefficient
library(margins)
mfx_weighted <- margins(glm_fit, variables = "Bullied_at_school")
ame_weighted <- summary(mfx_weighted)$AME
summary(mfx_weighted)
se_reg_weighted <- summary(mfx_weighted)$SE
```

# Propensity Score Analysis (weighted)

## Fit a propensity model

```{r}
# fit a unweighted logistic regression model for propensity score 
propensity_model <- glm(
  Bullied_at_school ~ What_is_your_sex + How_old_are_you + is_white + is_LGBTQ +
    Saw_physical_violence_in_neighborhood + Experienced_unstable_housing + 
    Ever_lived_w_parent_guardian_w_substance_abuse_ACE + Ever_parental_physical_abuse_ACEs + Current_marijuana_use +
    factor(Did_not_eat_breakfast) + did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days + 
    Hours_of_sleep_on_school_night,
  data = df_clean,
  family = binomial()
)
# estimate propensity scores
df_clean$propensity_score <- predict(propensity_model, type = "response")
# create 5 strata based on quantiles of propensity scores
df_clean$ps_stratum <- cut(
  df_clean$propensity_score,
  breaks = quantile(df_clean$propensity_score, probs = seq(0, 1, by = 0.2), na.rm = TRUE),
  include.lowest = TRUE,
  labels = paste0("Q", 1:5)
)
# check number of individuals in each stratum
table(df_clean$ps_stratum)
```

## Check balance

```{r}
# visually check overlap
ggplot(df_clean, aes(x = propensity_score, fill = Bullied_at_school)) +
  geom_density(alpha = 0.5) +
  facet_wrap(~ ps_stratum) +
  labs(title = "Propensity Score Distributions by Stratum",
       x = "Propensity Score", fill = "Bullied at School")
```


```{r}
# Standardized Mean Differences (SMD) by Stratum
# Define covariates used in the propensity model
covariates <- c("What_is_your_sex", "How_old_are_you", "is_white", "is_LGBTQ",
                "Saw_physical_violence_in_neighborhood", "Experienced_unstable_housing",
                "Ever_lived_w_parent_guardian_w_substance_abuse_ACE", "Ever_parental_physical_abuse_ACEs",
                "Current_marijuana_use", "Did_not_eat_breakfast",
                "did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days",
                "Hours_of_sleep_on_school_night")

# Create table stratified by treatment group, within strata
for (q in levels(df_clean$ps_stratum)) {
  cat("\n\n==============================\n")
  cat("Balance in Stratum", q, "\n")
  cat("==============================\n")
  
  stratified_data <- df_clean[df_clean$ps_stratum == q, ]
  
  tab <- CreateTableOne(vars = covariates, strata = "Bullied_at_school", data = stratified_data, factorVars = covariates)
  print(tab, smd = TRUE)
}
```

## Compute ATE

$$
\Delta_{w1} = \sum_{k=1}^{K} \left( 
\frac{\sum_{i \in S0_k} w_i}{\sum_{k=1}^{K} \sum_{i \in S0_k} w_i} 
\right) \left( 
\frac{\sum_{i \in S1_k} w_i y_i}{\sum_{i \in S1_k} w_i} - 
\frac{\sum_{i \in S0_k} w_i y_i}{\sum_{i \in S0_k} w_i} 
\right)
$$

```{r}
# zanutto_var computes the sample variance as defined in Zanutto 2006
zanutto_var <- function(weights, outcomes) {
  n <- length(outcomes)
  if (n <= 1) return(0)
  
  weight_sum <- sum(weights)
  weight_norm <- weights / weight_sum
  y_bar <- sum(weights * outcomes) / weight_sum
  
  # Compute z_i = omega_i * (y_i - y_bar)
  z <- weight_norm * (outcomes - y_bar)
  z_bar <- mean(z)
  
  s2 <- (n / (n - 1)) * sum((z - z_bar)^2)
  return(s2)
}
```

```{r}
K <- length(levels(df_clean$ps_stratum))

# get the denominator for weights of control units 
total_weight_control <- sum(df_clean$Overall_Analysis_Weight[df_clean$Bullied_at_school == 0])

# initialize ATE accumulator
ATE <- 0

var_prop_weighted <- 0

for (k in levels(df_clean$ps_stratum)) {
  data_k <- df_clean[df_clean$ps_stratum == k, ]
  control_k <- data_k[data_k$Bullied_at_school == 0, ]
  treated_k <- data_k[data_k$Bullied_at_school == 1, ]
  
  n0k <- nrow(control_k)
  n1k <- nrow(treated_k)
  sum_w0k <- sum(control_k$Overall_Analysis_Weight)
  sum_w1k <- sum(treated_k$Overall_Analysis_Weight)
  
  p0k <- sum(control_k$Overall_Analysis_Weight * control_k$Felt_sad_or_hopeless) / sum_w0k
  p1k <- sum(treated_k$Overall_Analysis_Weight * treated_k$Felt_sad_or_hopeless) / sum_w1k
  
  omega_k <- sum_w0k / total_weight_control
  
  # Update ATE
  ATE <- ATE + omega_k * (p1k - p0k)
  
  # Zanutto-style variance using weighted residuals
  s2_0k <- zanutto_var(control_k$Overall_Analysis_Weight, control_k$Felt_sad_or_hopeless)
  s2_1k <- zanutto_var(treated_k$Overall_Analysis_Weight, treated_k$Felt_sad_or_hopeless)
  
  var_k <- omega_k^2 * (s2_0k / n0k + s2_1k / n1k)
  var_prop_weighted <- var_prop_weighted + var_k
}

se_prop_weighted <- sqrt(var_prop_weighted)

cat("Estimated ATE (weighted):", round(ATE, 3), "\n")
cat("Standard Error (Zanutto):", round(se_prop_weighted, 4), "\n")
```

# Regression (unweighted)

```{r}
# fit the model
glm_fit_unweighted <- glm(
  Felt_sad_or_hopeless ~ Bullied_at_school + What_is_your_sex + How_old_are_you + is_white + is_LGBTQ +
    Saw_physical_violence_in_neighborhood + Experienced_unstable_housing + 
    Ever_lived_w_parent_guardian_w_substance_abuse_ACE + Ever_parental_physical_abuse_ACEs + Current_marijuana_use +
    factor(Did_not_eat_breakfast) + did_exercises_to_strengthen_or_tone_their_muscles_on_three_or_more_days + 
    Hours_of_sleep_on_school_night + Bullied_at_school:is_white + Bullied_at_school:Experienced_unstable_housing,
  data = df_clean,
  family = binomial()
)

summary(glm_fit_unweighted)
```



```{r}
# get predicted values
prob_unweight <- predict(glm_fit_unweighted, type = "response")
roc_obj_unweight <- roc(df_clean$Felt_sad_or_hopeless, prob_unweight)
plot(roc_obj_unweight)
auc(roc_obj_unweight)
```



```{r}
# bin each observations based on predicted probabilities

binned_unweight_df <- df_clean %>%
  mutate(
    predprob_unweight = predict(glm_fit_unweighted, type = "response"),  # predicted probabilities for unweighted
    linpred_unweight  = predict(glm_fit_unweighted, type = "link"),      # linear predictor (logit)
    bin = cut(linpred_unweight, breaks = unique(quantile(linpred_unweight, probs = (1:100)/101, na.rm = TRUE)))
  ) %>%
  group_by(bin) %>%
  summarize(
    y = sum(Felt_sad_or_hopeless == 1, na.rm = TRUE),     # observed 1s in the bin
    avgpred = mean(predprob_unweight, na.rm = TRUE),      # average predicted prob
    count = n(),                                          # number of obs in bin
    .groups = "drop"
  ) %>%
  mutate(
    obs_prop = y / count,
    se_fit = sqrt(avgpred * (1 - avgpred) / count)        # standard error of binomial proportion
  )

# plot observed vs predicted
ggplot(binned_unweight_df, aes(x = avgpred, y = obs_prop)) +
  geom_point() +
  geom_linerange(aes(ymin = obs_prop - 2 * se_fit,
                     ymax = obs_prop + 2 * se_fit), alpha = 0.5) +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray50") +
  labs(x = "Predicted probability", y = "Observed proportion",
       title = "Calibration Plot (Observed vs Predicted)") +
  theme_minimal()
```

```{r}

# calculates the margin effect over our data set for the bullied at school coefficient
library(margins)
mfx_unweighted <- margins(glm_fit_unweighted, variables = "Bullied_at_school")
ame_unweighted <- as.numeric(summary(mfx_unweighted)["AME"])
summary(mfx_unweighted)
se_reg_unweighted <- summary(mfx_unweighted)$SE
```

# Propensity Score Analysis (Unweighted)

```{r}
K <- length(levels(df_clean$ps_stratum))

# get the denominator for control units 
total_control <- sum(df_clean$Bullied_at_school == 0)

# initialize ATE accumulator
ATE_prop_unweighted <- 0
sample_var_prop_unweighted <- 0

for (k in levels(df_clean$ps_stratum)) {
  # subset data for stratum k
  data_k <- df_clean[df_clean$ps_stratum == k, ]
  
  # control units in stratum k
  control_k <- data_k[data_k$Bullied_at_school == 0, ]
  # treated units in stratum k
  treated_k <- data_k[data_k$Bullied_at_school == 1, ]
  
  # Mean outcome in treated group of stratum k
  mean_outcome_treated_k <- mean(treated_k$Felt_sad_or_hopeless, na.rm = TRUE)
  # Mean outcome in control group of stratum k
  mean_outcome_control_k <- mean(control_k$Felt_sad_or_hopeless, na.rm = TRUE)
  
  # Var outcome in treated group of stratum k
  var_outcome_treated_k <- var(treated_k$Felt_sad_or_hopeless, na.rm = TRUE)
  # Var outcome in control group of stratum k
  var_outcome_control_k <- var(control_k$Felt_sad_or_hopeless, na.rm = TRUE)
  
  # Calculating the weighted average
  n_control_k <- nrow(control_k)
  n_treated_k <- nrow(treated_k)
  omega_k <- n_control_k / total_control
  
  # calculating the ATE sequentially
  ATE_prop_unweighted <- ATE_prop_unweighted + omega_k * (mean_outcome_treated_k - mean_outcome_control_k)
  
  # calculating the SE sequentially
  sample_var_prop_unweighted <- sample_var_prop_unweighted + omega_k^2 * (var_outcome_control_k/n_control_k) + (var_outcome_treated_k/n_treated_k)
}

se_prop_unweighted <- sqrt(sample_var_prop_unweighted)

cat("Estimated ATE from propensity score strata:", round(ATE_prop_unweighted, 3), "\n")
cat("Estimated SE:", round(se_prop_unweighted, 3), "\n")

```


# Table Conclusion


```{r}
summary_results <- data.frame(method = c("weighted_mean", "regression_weighted", "prop_weighted", "regression_unweighted", "prop_unweighted"),
           estimate = c(ate_weighted_mean, as.numeric(ame_weighted), ate_prop_weighted, 
                        as.numeric(ame_unweighted), ATE_prop_unweighted),
          se = c("NA", round(se_reg_weighted, 5) , round(se_prop_weighted, 5) ,  round(se_reg_unweighted, 5) , round(se_prop_unweighted, 5)))

summary_results
```
```{r}
library(xtable)

# Create LaTeX table
latex_table <- xtable(summary_results, digits = c(0, 0, 3, 5))

# Print to .tex file
print(latex_table, file = "summary_results_table.tex")
```
